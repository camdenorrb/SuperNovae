// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: CapnProto.capnp

package dev.twelveoclock.supernovae.proto;

public final class CapnProto {
  public static class Message {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Message.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.CREATE_DB;
          case 1 : return Which.DELETE_DB;
          case 2 : return Which.CREATE_TABLE;
          case 3 : return Which.SELECT_DB;
          case 4 : return Which.SELECT_ROWS;
          case 5 : return Which.DELETE_ROWS;
          case 6 : return Which.INSERT_ROW;
          case 7 : return Which.UPDATE_ROWS;
          case 8 : return Which.SELECT_ROW_RESPONSE;
          case 9 : return Which.SELECT_TABLE_RESPONSE;
          case 10 : return Which.CACHE_ROWS;
          case 11 : return Which.CACHE_TABLE;
          case 12 : return Which.UNCACHE_ROWS;
          case 13 : return Which.UNCACHE_TABLE;
          case 14 : return Which.DELETE_TABLE;
          case 15 : return Which.SELECT_TABLE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isCreateDb() {
        return which() == Message.Which.CREATE_DB;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.Builder getCreateDb() {
        assert which() == Message.Which.CREATE_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.factory, 0, null, 0);
      }
      public final void setCreateDb(dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.Reader value) {
        _setShortField(0, (short)Message.Which.CREATE_DB.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.Builder initCreateDb() {
        _setShortField(0, (short)Message.Which.CREATE_DB.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.factory,0, 0);
      }
      public final boolean isDeleteDb() {
        return which() == Message.Which.DELETE_DB;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.Builder getDeleteDb() {
        assert which() == Message.Which.DELETE_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.factory, 0, null, 0);
      }
      public final void setDeleteDb(dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.Reader value) {
        _setShortField(0, (short)Message.Which.DELETE_DB.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.Builder initDeleteDb() {
        _setShortField(0, (short)Message.Which.DELETE_DB.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.factory,0, 0);
      }
      public final boolean isCreateTable() {
        return which() == Message.Which.CREATE_TABLE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.Builder getCreateTable() {
        assert which() == Message.Which.CREATE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.factory, 0, null, 0);
      }
      public final void setCreateTable(dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.Reader value) {
        _setShortField(0, (short)Message.Which.CREATE_TABLE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.Builder initCreateTable() {
        _setShortField(0, (short)Message.Which.CREATE_TABLE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.factory,0, 0);
      }
      public final boolean isSelectDb() {
        return which() == Message.Which.SELECT_DB;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.Builder getSelectDb() {
        assert which() == Message.Which.SELECT_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.factory, 0, null, 0);
      }
      public final void setSelectDb(dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.Reader value) {
        _setShortField(0, (short)Message.Which.SELECT_DB.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.Builder initSelectDb() {
        _setShortField(0, (short)Message.Which.SELECT_DB.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.factory,0, 0);
      }
      public final boolean isSelectRows() {
        return which() == Message.Which.SELECT_ROWS;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.Builder getSelectRows() {
        assert which() == Message.Which.SELECT_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.factory, 0, null, 0);
      }
      public final void setSelectRows(dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.Reader value) {
        _setShortField(0, (short)Message.Which.SELECT_ROWS.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.Builder initSelectRows() {
        _setShortField(0, (short)Message.Which.SELECT_ROWS.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.factory,0, 0);
      }
      public final boolean isDeleteRows() {
        return which() == Message.Which.DELETE_ROWS;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.Builder getDeleteRows() {
        assert which() == Message.Which.DELETE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.factory, 0, null, 0);
      }
      public final void setDeleteRows(dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.Reader value) {
        _setShortField(0, (short)Message.Which.DELETE_ROWS.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.Builder initDeleteRows() {
        _setShortField(0, (short)Message.Which.DELETE_ROWS.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.factory,0, 0);
      }
      public final boolean isInsertRow() {
        return which() == Message.Which.INSERT_ROW;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.Builder getInsertRow() {
        assert which() == Message.Which.INSERT_ROW:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.factory, 0, null, 0);
      }
      public final void setInsertRow(dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.Reader value) {
        _setShortField(0, (short)Message.Which.INSERT_ROW.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.Builder initInsertRow() {
        _setShortField(0, (short)Message.Which.INSERT_ROW.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.factory,0, 0);
      }
      public final boolean isUpdateRows() {
        return which() == Message.Which.UPDATE_ROWS;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.Builder getUpdateRows() {
        assert which() == Message.Which.UPDATE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.factory, 0, null, 0);
      }
      public final void setUpdateRows(dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.Reader value) {
        _setShortField(0, (short)Message.Which.UPDATE_ROWS.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.Builder initUpdateRows() {
        _setShortField(0, (short)Message.Which.UPDATE_ROWS.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.factory,0, 0);
      }
      public final boolean isSelectRowResponse() {
        return which() == Message.Which.SELECT_ROW_RESPONSE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.Builder getSelectRowResponse() {
        assert which() == Message.Which.SELECT_ROW_RESPONSE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.factory, 0, null, 0);
      }
      public final void setSelectRowResponse(dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.Reader value) {
        _setShortField(0, (short)Message.Which.SELECT_ROW_RESPONSE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.Builder initSelectRowResponse() {
        _setShortField(0, (short)Message.Which.SELECT_ROW_RESPONSE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.factory,0, 0);
      }
      public final boolean isSelectTableResponse() {
        return which() == Message.Which.SELECT_TABLE_RESPONSE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.Builder getSelectTableResponse() {
        assert which() == Message.Which.SELECT_TABLE_RESPONSE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.factory, 0, null, 0);
      }
      public final void setSelectTableResponse(dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.Reader value) {
        _setShortField(0, (short)Message.Which.SELECT_TABLE_RESPONSE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.Builder initSelectTableResponse() {
        _setShortField(0, (short)Message.Which.SELECT_TABLE_RESPONSE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.factory,0, 0);
      }
      public final boolean isCacheRows() {
        return which() == Message.Which.CACHE_ROWS;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.Builder getCacheRows() {
        assert which() == Message.Which.CACHE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.factory, 0, null, 0);
      }
      public final void setCacheRows(dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.Reader value) {
        _setShortField(0, (short)Message.Which.CACHE_ROWS.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.Builder initCacheRows() {
        _setShortField(0, (short)Message.Which.CACHE_ROWS.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.factory,0, 0);
      }
      public final boolean isCacheTable() {
        return which() == Message.Which.CACHE_TABLE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.Builder getCacheTable() {
        assert which() == Message.Which.CACHE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.factory, 0, null, 0);
      }
      public final void setCacheTable(dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.Reader value) {
        _setShortField(0, (short)Message.Which.CACHE_TABLE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.Builder initCacheTable() {
        _setShortField(0, (short)Message.Which.CACHE_TABLE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.factory,0, 0);
      }
      public final boolean isUncacheRows() {
        return which() == Message.Which.UNCACHE_ROWS;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.Builder getUncacheRows() {
        assert which() == Message.Which.UNCACHE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.factory, 0, null, 0);
      }
      public final void setUncacheRows(dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.Reader value) {
        _setShortField(0, (short)Message.Which.UNCACHE_ROWS.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.Builder initUncacheRows() {
        _setShortField(0, (short)Message.Which.UNCACHE_ROWS.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.factory,0, 0);
      }
      public final boolean isUncacheTable() {
        return which() == Message.Which.UNCACHE_TABLE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.Builder getUncacheTable() {
        assert which() == Message.Which.UNCACHE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.factory, 0, null, 0);
      }
      public final void setUncacheTable(dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.Reader value) {
        _setShortField(0, (short)Message.Which.UNCACHE_TABLE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.Builder initUncacheTable() {
        _setShortField(0, (short)Message.Which.UNCACHE_TABLE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.factory,0, 0);
      }
      public final boolean isDeleteTable() {
        return which() == Message.Which.DELETE_TABLE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.Builder getDeleteTable() {
        assert which() == Message.Which.DELETE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.factory, 0, null, 0);
      }
      public final void setDeleteTable(dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.Reader value) {
        _setShortField(0, (short)Message.Which.DELETE_TABLE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.Builder initDeleteTable() {
        _setShortField(0, (short)Message.Which.DELETE_TABLE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.factory,0, 0);
      }
      public final boolean isSelectTable() {
        return which() == Message.Which.SELECT_TABLE;
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.Builder getSelectTable() {
        assert which() == Message.Which.SELECT_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.factory, 0, null, 0);
      }
      public final void setSelectTable(dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.Reader value) {
        _setShortField(0, (short)Message.Which.SELECT_TABLE.ordinal());
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.factory,0, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.Builder initSelectTable() {
        _setShortField(0, (short)Message.Which.SELECT_TABLE.ordinal());
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.CREATE_DB;
          case 1 : return Which.DELETE_DB;
          case 2 : return Which.CREATE_TABLE;
          case 3 : return Which.SELECT_DB;
          case 4 : return Which.SELECT_ROWS;
          case 5 : return Which.DELETE_ROWS;
          case 6 : return Which.INSERT_ROW;
          case 7 : return Which.UPDATE_ROWS;
          case 8 : return Which.SELECT_ROW_RESPONSE;
          case 9 : return Which.SELECT_TABLE_RESPONSE;
          case 10 : return Which.CACHE_ROWS;
          case 11 : return Which.CACHE_TABLE;
          case 12 : return Which.UNCACHE_ROWS;
          case 13 : return Which.UNCACHE_TABLE;
          case 14 : return Which.DELETE_TABLE;
          case 15 : return Which.SELECT_TABLE;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isCreateDb() {
        return which() == Message.Which.CREATE_DB;
      }
      public boolean hasCreateDb() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.Reader getCreateDb() {
        assert which() == Message.Which.CREATE_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateDB.factory,0,null, 0);
      }

      public final boolean isDeleteDb() {
        return which() == Message.Which.DELETE_DB;
      }
      public boolean hasDeleteDb() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.Reader getDeleteDb() {
        assert which() == Message.Which.DELETE_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteDB.factory,0,null, 0);
      }

      public final boolean isCreateTable() {
        return which() == Message.Which.CREATE_TABLE;
      }
      public boolean hasCreateTable() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.Reader getCreateTable() {
        assert which() == Message.Which.CREATE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CreateTable.factory,0,null, 0);
      }

      public final boolean isSelectDb() {
        return which() == Message.Which.SELECT_DB;
      }
      public boolean hasSelectDb() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.Reader getSelectDb() {
        assert which() == Message.Which.SELECT_DB:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectDB.factory,0,null, 0);
      }

      public final boolean isSelectRows() {
        return which() == Message.Which.SELECT_ROWS;
      }
      public boolean hasSelectRows() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.Reader getSelectRows() {
        assert which() == Message.Which.SELECT_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRows.factory,0,null, 0);
      }

      public final boolean isDeleteRows() {
        return which() == Message.Which.DELETE_ROWS;
      }
      public boolean hasDeleteRows() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.Reader getDeleteRows() {
        assert which() == Message.Which.DELETE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteRows.factory,0,null, 0);
      }

      public final boolean isInsertRow() {
        return which() == Message.Which.INSERT_ROW;
      }
      public boolean hasInsertRow() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.Reader getInsertRow() {
        assert which() == Message.Which.INSERT_ROW:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.InsertRow.factory,0,null, 0);
      }

      public final boolean isUpdateRows() {
        return which() == Message.Which.UPDATE_ROWS;
      }
      public boolean hasUpdateRows() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.Reader getUpdateRows() {
        assert which() == Message.Which.UPDATE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UpdateRows.factory,0,null, 0);
      }

      public final boolean isSelectRowResponse() {
        return which() == Message.Which.SELECT_ROW_RESPONSE;
      }
      public boolean hasSelectRowResponse() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.Reader getSelectRowResponse() {
        assert which() == Message.Which.SELECT_ROW_RESPONSE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectRowResponse.factory,0,null, 0);
      }

      public final boolean isSelectTableResponse() {
        return which() == Message.Which.SELECT_TABLE_RESPONSE;
      }
      public boolean hasSelectTableResponse() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.Reader getSelectTableResponse() {
        assert which() == Message.Which.SELECT_TABLE_RESPONSE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTableResponse.factory,0,null, 0);
      }

      public final boolean isCacheRows() {
        return which() == Message.Which.CACHE_ROWS;
      }
      public boolean hasCacheRows() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.Reader getCacheRows() {
        assert which() == Message.Which.CACHE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheRows.factory,0,null, 0);
      }

      public final boolean isCacheTable() {
        return which() == Message.Which.CACHE_TABLE;
      }
      public boolean hasCacheTable() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.Reader getCacheTable() {
        assert which() == Message.Which.CACHE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.CacheTable.factory,0,null, 0);
      }

      public final boolean isUncacheRows() {
        return which() == Message.Which.UNCACHE_ROWS;
      }
      public boolean hasUncacheRows() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.Reader getUncacheRows() {
        assert which() == Message.Which.UNCACHE_ROWS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheRows.factory,0,null, 0);
      }

      public final boolean isUncacheTable() {
        return which() == Message.Which.UNCACHE_TABLE;
      }
      public boolean hasUncacheTable() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.Reader getUncacheTable() {
        assert which() == Message.Which.UNCACHE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.UncacheTable.factory,0,null, 0);
      }

      public final boolean isDeleteTable() {
        return which() == Message.Which.DELETE_TABLE;
      }
      public boolean hasDeleteTable() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.Reader getDeleteTable() {
        assert which() == Message.Which.DELETE_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.DeleteTable.factory,0,null, 0);
      }

      public final boolean isSelectTable() {
        return which() == Message.Which.SELECT_TABLE;
      }
      public boolean hasSelectTable() {
        return !_pointerFieldIsNull(0);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.Reader getSelectTable() {
        assert which() == Message.Which.SELECT_TABLE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.SelectTable.factory,0,null, 0);
      }

    }

    public enum Which {
      CREATE_DB,
      DELETE_DB,
      CREATE_TABLE,
      SELECT_DB,
      SELECT_ROWS,
      DELETE_ROWS,
      INSERT_ROW,
      UPDATE_ROWS,
      SELECT_ROW_RESPONSE,
      SELECT_TABLE_RESPONSE,
      CACHE_ROWS,
      CACHE_TABLE,
      UNCACHE_ROWS,
      UNCACHE_TABLE,
      DELETE_TABLE,
      SELECT_TABLE,
      _NOT_IN_SCHEMA,
    }
  }


  public static class CreateDB {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CreateDB.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setDatabaseName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setDatabaseName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initDatabaseName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class DeleteDB {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DeleteDB.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setDatabaseName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setDatabaseName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initDatabaseName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class CreateTable {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CreateTable.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasKeyColumn() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getKeyColumn() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setKeyColumn(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setKeyColumn(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initKeyColumn(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
      public final boolean getShouldCacheAll() {
        return _getBooleanField(0);
      }
      public final void setShouldCacheAll(boolean value) {
        _setBooleanField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasKeyColumn() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getKeyColumn() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

      public final boolean getShouldCacheAll() {
        return _getBooleanField(0);
      }

    }

  }


  public static class SelectDB {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SelectDB.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setDatabaseName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setDatabaseName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initDatabaseName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasDatabaseName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getDatabaseName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class SelectRows {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SelectRows.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasFilters() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder> getFilters() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, null, 0);
      }
      public final void setFilters(org.capnproto.StructList.Reader<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader> value) {
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder> initFilters(int size) {
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, size);
      }
      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }
      public final void setOnlyCheckCache(boolean value) {
        _setBooleanField(0, value);
      }

      public final boolean getLoadIntoCache() {
        return _getBooleanField(1);
      }
      public final void setLoadIntoCache(boolean value) {
        _setBooleanField(1, value);
      }

      public final int getAmountOfRows() {
        return _getIntField(1);
      }
      public final void setAmountOfRows(int value) {
        _setIntField(1, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean hasFilters() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader> getFilters() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, null, 0);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }

      public final boolean getLoadIntoCache() {
        return _getBooleanField(1);
      }

      public final int getAmountOfRows() {
        return _getIntField(1);
      }

    }

  }


  public static class DeleteRows {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DeleteRows.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasFilters() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder> getFilters() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, null, 0);
      }
      public final void setFilters(org.capnproto.StructList.Reader<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader> value) {
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder> initFilters(int size) {
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, size);
      }
      public final int getAmountOfRows() {
        return _getIntField(0);
      }
      public final void setAmountOfRows(int value) {
        _setIntField(0, value);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(32);
      }
      public final void setOnlyCheckCache(boolean value) {
        _setBooleanField(32, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean hasFilters() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader> getFilters() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.listFactory, 1, null, 0);
      }

      public final int getAmountOfRows() {
        return _getIntField(0);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(32);
      }

    }

  }


  public static class InsertRow {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return InsertRow.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasRow() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getRow() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setRow(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setRow(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initRow(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
      public final boolean getShouldCache() {
        return _getBooleanField(0);
      }
      public final void setShouldCache(boolean value) {
        _setBooleanField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasRow() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getRow() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

      public final boolean getShouldCache() {
        return _getBooleanField(0);
      }

    }

  }


  public static class UpdateRows {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)4);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return UpdateRows.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory, 1, null, 0);
      }
      public final void setFilter(dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader value) {
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder initFilter() {
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, 0);
      }
      public final boolean hasColumnName() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.Text.Builder getColumnName() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }
      public final void setColumnName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 2, value);
      }
      public final void setColumnName(String value) {
        _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initColumnName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 2, size);
      }
      public final boolean hasValue() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.Text.Builder getValue() {
        return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
      }
      public final void setValue(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 3, value);
      }
      public final void setValue(String value) {
        _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initValue(int size) {
        return _initPointerField(org.capnproto.Text.factory, 3, size);
      }
      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }
      public final void setOnlyCheckCache(boolean value) {
        _setBooleanField(0, value);
      }

      public final int getAmountOfRows() {
        return _getIntField(1);
      }
      public final void setAmountOfRows(int value) {
        _setIntField(1, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasFilter() {
        return !_pointerFieldIsNull(1);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1,null, 0);
      }

      public boolean hasColumnName() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Text.Reader getColumnName() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }

      public boolean hasValue() {
        return !_pointerFieldIsNull(3);
      }
      public org.capnproto.Text.Reader getValue() {
        return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }

      public final int getAmountOfRows() {
        return _getIntField(1);
      }

    }

  }


  public static class SelectRowResponse {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SelectRowResponse.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasRow() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getRow() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setRow(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setRow(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initRow(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasRow() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getRow() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class SelectTableResponse {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SelectTableResponse.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasKeyColumn() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getKeyColumn() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setKeyColumn(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setKeyColumn(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initKeyColumn(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
      public final boolean getShouldCacheAll() {
        return _getBooleanField(0);
      }
      public final void setShouldCacheAll(boolean value) {
        _setBooleanField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasKeyColumn() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getKeyColumn() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

      public final boolean getShouldCacheAll() {
        return _getBooleanField(0);
      }

    }

  }


  public static class SelectTable {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SelectTable.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class CacheTable {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CacheTable.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class CacheRows {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CacheRows.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory, 1, null, 0);
      }
      public final void setFilter(dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader value) {
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder initFilter() {
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, 0);
      }
      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }
      public final void setOnlyCheckCache(boolean value) {
        _setBooleanField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasFilter() {
        return !_pointerFieldIsNull(1);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1,null, 0);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }

    }

  }


  public static class UncacheRows {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return UncacheRows.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory, 1, null, 0);
      }
      public final void setFilter(dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader value) {
        _setPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, value);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Filter.Builder initFilter() {
        return _initPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1, 0);
      }
      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }
      public final void setOnlyCheckCache(boolean value) {
        _setBooleanField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasFilter() {
        return !_pointerFieldIsNull(1);
      }
      public dev.twelveoclock.supernovae.proto.CapnProto.Filter.Reader getFilter() {
        return _getPointerField(dev.twelveoclock.supernovae.proto.CapnProto.Filter.factory,1,null, 0);
      }

      public final boolean getOnlyCheckCache() {
        return _getBooleanField(0);
      }

    }

  }


  public static class UncacheTable {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return UncacheTable.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class DeleteTable {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return DeleteTable.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTableName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTableName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTableName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTableName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTableName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }


  public static class Filter {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Filter.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasColumnName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getColumnName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setColumnName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setColumnName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initColumnName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final dev.twelveoclock.supernovae.proto.CapnProto.Check getCheck() {
        switch(_getShortField(0)) {
          case 0 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.EQUAL;
          case 1 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.LESSER_THAN;
          case 2 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.GREATER_THAN;
          case 3 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.LESSER_THAN_OR_EQUAL;
          case 4 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.GREATER_THAN_OR_EQUAL;
          default: return dev.twelveoclock.supernovae.proto.CapnProto.Check._NOT_IN_SCHEMA;
        }
      }
      public final void setCheck(dev.twelveoclock.supernovae.proto.CapnProto.Check value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final boolean hasCompareToValue() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getCompareToValue() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setCompareToValue(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setCompareToValue(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initCompareToValue(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasColumnName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getColumnName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final dev.twelveoclock.supernovae.proto.CapnProto.Check getCheck() {
        switch(_getShortField(0)) {
          case 0 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.EQUAL;
          case 1 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.LESSER_THAN;
          case 2 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.GREATER_THAN;
          case 3 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.LESSER_THAN_OR_EQUAL;
          case 4 : return dev.twelveoclock.supernovae.proto.CapnProto.Check.GREATER_THAN_OR_EQUAL;
          default: return dev.twelveoclock.supernovae.proto.CapnProto.Check._NOT_IN_SCHEMA;
        }
      }

      public boolean hasCompareToValue() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getCompareToValue() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

    }

  }


  public enum Check {
    EQUAL,
    LESSER_THAN,
    GREATER_THAN,
    LESSER_THAN_OR_EQUAL,
    GREATER_THAN_OR_EQUAL,
    _NOT_IN_SCHEMA,
  }


public static final class Schemas {
public static final org.capnproto.SegmentReader b_9c63d8afbc958760 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0060\u0087\u0095\u00bc\u00af\u00d8\u0063\u009c" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0010\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0087\u0003\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u004d\u0065\u0073\u0073\u0061\u0067\u0065\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f8\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00f7\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0001\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u00f6\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fd\u0001\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u00f5\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0002\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u00f4\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0002\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u00f3\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u00f1\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000f\u0000\u00f0\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0072\u0065\u0061\u0074\u0065\u0044\u0062" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006a\u00d6\u00bc\u00f2\u004c\u00a9\u001d\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u006c\u0065\u0074\u0065\u0044\u0062" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0047\u00b4\u0062\u0045\u0003\u0017\u00e5\u00c9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0072\u0065\u0061\u0074\u0065\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u000f\r\u0011\u0011\u0098\u00e2\u00b5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006c\u0065\u0063\u0074\u0044\u0062" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u00ec\u00de\u004e\u0026\u0020\u004c\u00ed" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006c\u0065\u0063\u0074\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f3\u00c9\u0067\u0041\u0067\u0003\u00a9\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0069\u0076\u0088\u002a\u0020\u00bf\u00a8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f" +
   "\u0077\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0053\u00d3\u001e\u006e\u0031\u001e\u00bf" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0070\u0064\u0061\u0074\u0065\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0009\u009a\u0049\u0065\u002c\u0044\u00eb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006c\u0065\u0063\u0074\u0052\u006f" +
   "\u0077\u0052\u0065\u0073\u0070\u006f\u006e\u0073" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u006c\u00b4\u00cf\u00d2\u008a\u0067\u0097" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006c\u0065\u0063\u0074\u0054\u0061" +
   "\u0062\u006c\u0065\u0052\u0065\u0073\u0070\u006f" +
   "\u006e\u0073\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0047\u004f\u00b0\u00a7\u00cb\u00c6\u000f\u009e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0063\u0068\u0065\u0052\u006f\u0077" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008f\u0014\u0099\u004e\u00ce\n\u009b\u0092" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0063\u0068\u0065\u0054\u0061\u0062" +
   "\u006c\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008e\u0050\u0056\u00ab\u00c5\u00a3\u0023\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u006e\u0063\u0061\u0063\u0068\u0065\u0052" +
   "\u006f\u0077\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u00b7\u00cd\u006a\u0008\u0054\u0055\u00cd" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u006e\u0063\u0061\u0063\u0068\u0065\u0054" +
   "\u0061\u0062\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0037\u003c\u0072\u00aa\u003f\u006f\u0099\u0099" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u006c\u0065\u0074\u0065\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u00fe\u004b\u00d2\u0003\u00cc\u0081\u009f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006c\u0065\u0063\u0074\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u001d\u0015\u00d9\u0091\u0001\u0004\u0099" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_881da94cf2bcd66a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006a\u00d6\u00bc\u00f2\u004c\u00a9\u001d\u0088" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0043\u0072\u0065\u0061\u0074\u0065\u0044\u0042" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065" +
   "\u004e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c9e517034562b447 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0047\u00b4\u0062\u0045\u0003\u0017\u00e5\u00c9" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0044\u0065\u006c\u0065\u0074\u0065\u0044\u0042" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065" +
   "\u004e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b5e29811110d0f61 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0061\u000f\r\u0011\u0011\u0098\u00e2\u00b5" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0043\u0072\u0065\u0061\u0074\u0065\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006b\u0065\u0079\u0043\u006f\u006c\u0075\u006d" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0068\u006f\u0075\u006c\u0064\u0043\u0061" +
   "\u0063\u0068\u0065\u0041\u006c\u006c\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ed4c20264edeecb5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b5\u00ec\u00de\u004e\u0026\u0020\u004c\u00ed" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0053\u0065\u006c\u0065\u0063\u0074\u0044\u0042" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065" +
   "\u004e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ffa903674167c9f3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f3\u00c9\u0067\u0041\u0067\u0003\u00a9\u00ff" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0053\u0065\u006c\u0065\u0063\u0074\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0074\u0065\u0072\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0043\u0068\u0065\u0063" +
   "\u006b\u0043\u0061\u0063\u0068\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0061\u0064\u0049\u006e\u0074\u006f" +
   "\u0043\u0061\u0063\u0068\u0065\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006d\u006f\u0075\u006e\u0074\u004f\u0066" +
   "\u0052\u006f\u0077\u0073\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a8bf202a88766929 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0029\u0069\u0076\u0088\u002a\u0020\u00bf\u00a8" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0044\u0065\u006c\u0065\u0074\u0065\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0074\u0065\u0072\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006d\u006f\u0075\u006e\u0074\u004f\u0066" +
   "\u0052\u006f\u0077\u0073\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0043\u0068\u0065\u0063" +
   "\u006b\u0043\u0061\u0063\u0068\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bf1e316e1ed353d5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d5\u0053\u00d3\u001e\u006e\u0031\u001e\u00bf" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0049\u006e\u0073\u0065\u0072\u0074\u0052\u006f" +
   "\u0077\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0068\u006f\u0075\u006c\u0064\u0043\u0061" +
   "\u0063\u0068\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eb442c65499a092b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u002b\u0009\u009a\u0049\u0065\u002c\u0044\u00eb" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0055\u0070\u0064\u0061\u0074\u0065\u0052\u006f" +
   "\u0077\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a5\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0074\u0065\u0072\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006c\u0075\u006d\u006e\u004e\u0061" +
   "\u006d\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0043\u0068\u0065\u0063" +
   "\u006b\u0043\u0061\u0063\u0068\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006d\u006f\u0075\u006e\u0074\u004f\u0066" +
   "\u0052\u006f\u0077\u0073\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_97678ad2cfb46cb0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b0\u006c\u00b4\u00cf\u00d2\u008a\u0067\u0097" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0053\u0065\u006c\u0065\u0063\u0074\u0052\u006f" +
   "\u0077\u0052\u0065\u0073\u0070\u006f\u006e\u0073" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0072\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9e0fc6cba7b04f47 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0047\u004f\u00b0\u00a7\u00cb\u00c6\u000f\u009e" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0053\u0065\u006c\u0065\u0063\u0074\u0054\u0061" +
   "\u0062\u006c\u0065\u0052\u0065\u0073\u0070\u006f" +
   "\u006e\u0073\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006b\u0065\u0079\u0043\u006f\u006c\u0075\u006d" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0068\u006f\u0075\u006c\u0064\u0043\u0061" +
   "\u0063\u0068\u0065\u0041\u006c\u006c\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_99040191d9151dc0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c0\u001d\u0015\u00d9\u0091\u0001\u0004\u0099" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0053\u0065\u006c\u0065\u0063\u0074\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad23a3c5ab56508e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008e\u0050\u0056\u00ab\u00c5\u00a3\u0023\u00ad" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0043\u0061\u0063\u0068\u0065\u0054\u0061\u0062" +
   "\u006c\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_929b0ace4e99148f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008f\u0014\u0099\u004e\u00ce\n\u009b\u0092" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0043\u0061\u0063\u0068\u0065\u0052\u006f\u0077" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0074\u0065\u0072\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0043\u0068\u0065\u0063" +
   "\u006b\u0043\u0061\u0063\u0068\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cd5554086acdb7c9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c9\u00b7\u00cd\u006a\u0008\u0054\u0055\u00cd" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0055\u006e\u0063\u0061\u0063\u0068\u0065\u0052" +
   "\u006f\u0077\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0074\u0065\u0072\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u006e\u006c\u0079\u0043\u0068\u0065\u0063" +
   "\u006b\u0043\u0061\u0063\u0068\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_99996f3faa723c37 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0037\u003c\u0072\u00aa\u003f\u006f\u0099\u0099" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0055\u006e\u0063\u0061\u0063\u0068\u0065\u0054" +
   "\u0061\u0062\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9f81cc03d24bfe84 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0084\u00fe\u004b\u00d2\u0003\u00cc\u0081\u009f" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0044\u0065\u006c\u0065\u0074\u0065\u0054\u0061" +
   "\u0062\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0062\u006c\u0065\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eafb36c661f158a1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a1\u0058\u00f1\u0061\u00c6\u0036\u00fb\u00ea" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0046\u0069\u006c\u0074\u0065\u0072\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u006c\u0075\u006d\u006e\u004e\u0061" +
   "\u006d\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0068\u0065\u0063\u006b\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0014\u0037\u0040\u00ce\u0079\u00e1\u00d1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006d\u0070\u0061\u0072\u0065\u0054" +
   "\u006f\u0056\u0061\u006c\u0075\u0065\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d1e179ce4037146c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006c\u0014\u0037\u0040\u00ce\u0079\u00e1\u00d1" +
   "\u0010\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u00e5\u00a0\u00a7\u0034\u0029\u00ab\u00d7\u00c1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u007f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0061\u0070\u006e\u0050\u0072\u006f\u0074" +
   "\u006f\u002e\u0063\u0061\u0070\u006e\u0070\u003a" +
   "\u0043\u0068\u0065\u0063\u006b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0071\u0075\u0061\u006c\u0000\u0000\u0000" +
   "\u006c\u0065\u0073\u0073\u0065\u0072\u0054\u0068" +
   "\u0061\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0054" +
   "\u0068\u0061\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0065\u0073\u0073\u0065\u0072\u0054\u0068" +
   "\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061" +
   "\u006c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0054" +
   "\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075" +
   "\u0061\u006c\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

